version: '3.8'

services:
  backend:
    build:
      context: ./backend
    env_file:
      - .env
    container_name: fastapi_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - ./backend/pyproject.toml:/app/pyproject.toml
      - ./backend/poetry.lock:/app/poetry.lock
      - ./backend/tests:/app/tests
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ENV=development
      - PYTHONPATH=/app/app
      - MONGO_URI=mongodb://admin:admin@mongo:27017/task_database
    networks:
      - my_network
    depends_on:
      - mongo

  frontend:
    build:
      context: ./frontend
    container_name: react_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - ENV=development
    networks:
      - my_network
    depends_on:
      - backend

  mongo:
    image: mongo:8.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: task_database
    volumes:
      - mongo_data:/data/db
    networks:
      - my_network
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo_data:
    driver: local

networks:
  my_network:
    driver: bridge
